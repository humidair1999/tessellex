// mixins

// https://github.com/mastastealth/sass-flex-mixin
@mixin flexbox {
  display: -webkit-box;
  display: -webkit-flex;
  display: -moz-flex;
  display: -ms-flexbox;
  display: flex;
}

@mixin flex($fg: 1, $fs: null, $fb: null) {
  // Set a variable to be used by box-flex properties
  $fg-boxflex: $fg;

  // Box-Flex only supports a flex-grow value so let's grab the
  // first item in the list and just return that.
  @if type-of($fg) == 'list' {
    $fg-boxflex: nth($fg, 1);
  }

  -webkit-box-flex: $fg-boxflex;
  -webkit-flex: $fg $fs $fb;
  -moz-box-flex: $fg-boxflex;
  -moz-flex: $fg $fs $fb;
  -ms-flex: $fg $fs $fb;
  flex: $fg $fs $fb;
}

@mixin flex-basis($value: auto) {
  -webkit-flex-basis: $value;
  -moz-flex-basis: $value;
  -ms-flex-preferred-size: $value;
  flex-basis: $value;
}

@mixin tx-generate-col-classes($col-class, $num-cols, $device-name: null) {
  @for $i from 1 through $num-cols {
    @if $device-name != null {
      &#{$col-class}--#{$i}of#{$num-cols}--#{$device-name} { @include flex-basis(percentage($i / $num-cols)); }
    }
    @else {
      &#{$col-class}--#{$i}of#{$num-cols} { @include flex-basis(percentage($i / $num-cols)); }
    }
  }
}

// variables and config

$is-flexbox-enabled: true;

// grid classes

// TODO: should all grid components (container/row/col) be __?
.tx {
  &__container {
    max-width: 1024px;
    margin: 0 auto;
  }

  &__row, &__col {
    border: 1px solid #e3e3e3;
  }

  &__row {
    @include flexbox;
  }

  &__col {
    width: 100%;

    &#{&}--auto {
      @include flex(1);
    }

    @include tx-generate-col-classes(&, 6);

    @media (min-width: 600px) {
      @include tx-generate-col-classes(&, 12, tablet);
    }

    @media (min-width: 1024px) {
      @include tx-generate-col-classes(&, 12, desktop);
    }
  }

  &--content-centered {
    text-align: center;
  }
}